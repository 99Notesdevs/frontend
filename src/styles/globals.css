/* Import Google Fonts */
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

/* Import Tailwind CSS */
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';

/* Set default font family and colors */
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --radius: 0.5rem;
  } 
 
  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
  }

  html {
    font-family: 'Poppins', sans-serif;
  }
  
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
  
  h1, h2, h3, h4, h5, h6, p, span, div, a {
    font-family: 'Poppins', sans-serif;
  }
}

/* Dark mode styles */
.dark .prose {
  color: #f3f4f6; /* Lighter text for better readability in dark mode */
}

.dark .prose h1 {
  color: #ffffff; /* Pure white for h1 in dark mode */
  font-weight: 700; /* Slightly bolder for better visibility */
}

.dark .prose h2 {
  color: #f9fafb; /* Very light gray for h2 in dark mode */
  font-weight: 600;
}

.dark .prose h3 {
  color: #7dd3fc !important; /* Lighter blue-300 for better visibility */
  font-weight: 600 !important;
}

.dark .prose h6 {
  color: #d1d5db; /* Lighter gray-300 for dark mode */
  font-weight: 500;
  opacity: 0.9;
}

.dark .prose p,
.dark .prose li {
  color: #f3f4f6; /* Lighter text for better readability */
}

/* Table styles for dark mode */
.dark .table-wrapper,
.dark .prose table {
  background-color: #1e293b !important; /* slate-800 */
  color: #f8fafc !important; /* slate-50 */
  border-color: #334155; /* slate-700 */
}

.dark .table-wrapper th,
.dark .table-wrapper td,
.dark .prose th,
.dark .prose td {
  color: #f8fafc !important; /* slate-50 */
  border-color: #334155 !important; /* slate-700 */
  background-color: #1e293b !important; /* slate-800 */
}

.dark .table-wrapper th {
  background-color: #1e40af !important; /* blue-800 */
  color: #f8fafc !important; /* slate-50 */
  font-weight: 500;
}

.dark .table-wrapper tr:hover td {
  background-color: #334155 !important; /* slate-700 */
}

.dark .prose strong {
  color: #ffffff; /* White for bold text */
  font-weight: 600;
}

.dark .prose em {
  color: #e5e7eb; /* Slightly lighter for emphasis */
}

/* Ensure links are visible in both modes */
.prose a {
  color: #2563eb; /* blue-600 for light mode */
  text-decoration: none;
  transition: color 0.2s ease;
  font-weight: 500;
}

.dark .prose a {
  color: #60a5fa; /* blue-400 for dark mode */
}

.prose a:hover {
  color: #1d4ed8; /* blue-700 for light mode hover */
  text-decoration: underline;
}

.dark .prose a:hover {
  color: #93c5fd; /* Lighter blue-300 for better visibility on hover */
  text-decoration: underline;
  text-underline-offset: 2px;
}

/* Table styles */
.table-wrapper {
  width: 100%;
  margin: 1rem 0;
  overflow-x: hidden; /* Changed from auto to hidden to prevent horizontal scroll */
  -webkit-overflow-scrolling: touch;
  border-radius: 0.375rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  display: block;
  max-width: 100%;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  scrollbar-width: thin;
  scrollbar-color: #888 transparent;
}

/* Custom scrollbar styles */
/* For WebKit browsers (Chrome, Safari, newer Edge) */
::-webkit-scrollbar {
  width: 6px;  /* Vertical scrollbar width */
  height: 4px; /* Horizontal scrollbar height */
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent;
  border-radius: 3px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 3px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: #666;
}

/* For Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: #888 transparent;
}

/* Table specific scrollbar */
.table-wrapper::-webkit-scrollbar {
  height: 4px; /* Even smaller for tables */
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  ::-webkit-scrollbar {
    width: 4px;
    height: 3px;
  }
  
  .table-wrapper::-webkit-scrollbar {
    height: 3px;
  }
}

.table-wrapper table {
  width: 100%;
  min-width: 100%;
  border-collapse: collapse;
  table-layout: fixed; /* Changed from auto to fixed for better width control */
  word-wrap: break-word;
  color: inherit; /* Inherit text color from parent */
}

.table-wrapper th,
.table-wrapper td {
  padding: 0.75rem 1rem;
  border: 1px solid #e5e7eb;
  text-align: left;
  min-width: 120px;
  white-space: nowrap;
  vertical-align: top;
  color: #1f2937; /* Default text color for tables */
}

/* Table cell styling with controlled width and text wrapping */
.table-wrapper td {
  min-width: 300px;
  max-width: 400px;
  white-space: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  word-break: break-word;
  padding: 0.75rem 1rem;
  vertical-align: top;
  border: 1px solid #e5e7eb;
  color: #1f2937; /* Ensure text color is consistent */
}

.table-wrapper th {
  background-color: #f9fafb;
  color: #111827; /* Darker text for headers */
  font-weight: 600;
}

.table-wrapper tr:nth-child(even) {
  background-color: #f9fafb;
}

.table-wrapper tr:hover {
  background-color: #f3f4f6;
}

/* For TipTap editor and article content */
.ProseMirror .table-wrapper,
.prose .table-wrapper {
  margin: 1rem 0;
  width: 100%;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  border-radius: 0.375rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  display: block;
  max-width: 100%;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  scrollbar-width: thin;
  scrollbar-color: #888 #f1f1f1;
}

.ProseMirror .table-wrapper::-webkit-scrollbar,
.prose .table-wrapper::-webkit-scrollbar {
  height: 8px;
}

.ProseMirror .table-wrapper::-webkit-scrollbar-track,
.prose .table-wrapper::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.ProseMirror .table-wrapper::-webkit-scrollbar-thumb,
.prose .table-wrapper::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 4px;
}

.ProseMirror table,
.prose table {
  width: 100%;
  min-width: 100%;
  border-collapse: collapse;
  table-layout: auto;
  margin: 0;
  white-space: nowrap;
}

.ProseMirror th,
.ProseMirror td,
.prose th,
.prose td {
  padding: 0.5rem 1rem;
  border: 1px solid #e5e7eb;
  white-space: normal;
  vertical-align: top;
  min-width: 300px;
  max-width: 400px;
  word-wrap: break-word;
  overflow-wrap: break-word;
  word-break: break-word;
  overflow: hidden;
}

/* Ensure tables in article content have proper scrolling */
.prose {
  color: var(--text-primary);
  max-width: 100%;
  overflow-wrap: break-word;
}

/* Add floating image styles for article content */
.prose [data-type="image-container"] {
  display: inline-block;
  margin: 0.5rem 0;
  position: relative;
  max-width: 100%;
}

.prose [data-type="image-container"][data-float="left"] {
  float: left;
  margin-right: 1.5rem;
  margin-left: 0;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  shape-outside: margin-box;
  max-width: 50%;
}

.prose [data-type="image-container"][data-float="right"] {
  float: right;
  margin-left: 1.5rem;
  margin-right: 0;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  shape-outside: margin-box;
  max-width: 50%;
}

.prose [data-type="image-container"][data-float="none"] {
  clear: both;
  display: block;
  margin: 1rem auto;
  max-width: 100%;
}

.prose .floating-image {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 0;
  border-radius: 0.375rem;
}

/* Ensure paragraphs clear floats properly */
.prose p {
  clear: both;
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

/* Clear floats after content */
.prose > *:after {
  content: "";
  display: table;
  clear: both;
}

/* Add some spacing between paragraphs */
.prose p + p {
  margin-top: 0.75em;
}

.prose :where(table):not(:where([class~='not-prose'] *)) {
  margin: 0;
  width: 100%;
  table-layout: auto;
  border-collapse: collapse;
  display: block;
  overflow-x: auto;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
}

.prose :where(th, td):not(:where([class~='not-prose'] *)) {
  min-width: 300px;
  max-width: 400px;
  white-space: normal;
  word-wrap: break-word;
  overflow-wrap: break-word;
  word-break: break-word;
}

.ProseMirror th {
  background-color: #f9fafb;
  font-weight: 600;
  position: sticky;
  top: 0;
  z-index: 10;
}

/* Yellow icon styling */
.yellow-icon {
  filter: invert(70%) sepia(80%) saturate(1000%) hue-rotate(360deg) brightness(110%);
}

.prose {
  font-size: 0.9375rem; /* 15px base font size */
  line-height: 1.3;
}

.prose p {
  font-size: 0.9375rem;
  line-height: 1.5;
}

/* Make sure these styles take precedence over Tailwind's prose classes */
.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6 
  /* font-weight: 600;
  line-height: 1.2;
  margin-top: 1.5rem;
  margin-bottom: 1rem;
} */

/* Remove !important from H1 and H2 to allow template-specific colors */
.prose h1 {
  font-size: 1.50rem;
  line-height: 1.2;
  margin: 1.5rem 0 1rem;
  font-weight: 600;
}

.prose h2 {
  font-size: 1.25rem;
  line-height: 1.25;
  margin: 1.25rem 0 0.75rem;
  font-weight: 600;
}

/* Keep !important for H3 and H4 to ensure our color scheme is applied */
.prose h3 {
  font-size: 1.125rem !important;
  line-height: 1.3 !important;
  margin: 1.1rem 0 0.6rem !important;
  font-weight: 600 !important;
  color:#083344 !important; /* cyan-950 #083344*/
}

.prose h4 {
  font-size: 1rem !important;
  line-height: 1.35 !important;
  margin: 1rem 0 0.5rem !important;
  font-weight: 600 !important;
  color: #1d4ed8 !important; /* blue-700 */
}

.prose h5 {
  font-size: 0.875rem; /* 16px */
  line-height: 1.4;
  margin: 0.9rem 0 0.5rem;
  font-weight: 600;
}

.prose h6 {
  font-size: 0.75rem; /* 15px */
  line-height: 1.4;
  margin: 0.8rem 0 0.5rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.02em;
  color: var(--text-muted);
}

.locked-content {
  position: relative;
  overflow: hidden;
  max-height: 200px;
  margin-bottom: 1rem;
}

.locked-content::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(var(--gradient-transparent) 50%,
            /* Fully transparent at the top */
            var(--gradient-semi) 80%,
            /* Semi-transparent in the middle */
            var(--gradient-opaque) 100%
            /* Fully opaque at the bottom */
        );
    pointer-events: none;
    /* Ensure the gradient doesn't block interactions */
}

.locked-content p {
    filter: blur(2px);
    /* Slight blur for the text */
    opacity: 0.8;
    /* Slightly reduce the opacity */
}

.locked-content .login-link {
    position: absolute;
    top: 50%;
    /* Center vertically */
    left: 50%;
    /* Center horizontally */
    transform: translate(-50%, -50%);
    /* Adjust for the element's size */
    z-index: 10;
    background-color: var(--locked-bg);
    /* Semi-transparent black background */
    color: var(--white);
    padding: 10px 20px;
    border-radius: 8px;
    font-size: 14px;
    text-align: center;
    text-decoration: none;
    font-weight: bold;
    transition: background-color 0.3s ease;
}

.locked-content .login-link:hover {
    background-color: var(--locked-bg-hover);
    /* Darker background on hover */
}

.font-playfair {
    font-family: "Playfair Display", serif;
}

.font-poppins {
    font-family: "Poppins", sans-serif;
}

@keyframes float {
    0% {
        transform: translateY(0px);
    }

    50% {
        transform: translateY(-20px);
    }

    100% {
        transform: translateY(0px);
    }
}

.animate-float {
    animation: float 6s ease-in-out infinite;
}

@keyframes pulse {

    0%,
    100% {
        opacity: 0.4;
        transform: scale(1);
    }

    50% {
        opacity: 0.6;
        transform: scale(1.05);
    }
}

.animate-pulse {
    animation: pulse 5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.delay-300 {
    animation-delay: 300ms;
}

.delay-700 {
    animation-delay: 700ms;
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 10px;
}

::-webkit-scrollbar-track {
    background: var(--scrollbar-track);
}

::-webkit-scrollbar-thumb {
    background: var(--scrollbar-thumb);
    border-radius: 6px;
    border: 3px solid var(--scrollbar-track);
}

::-webkit-scrollbar-thumb:hover {
    background: var(--scrollbar-thumb-hover);
}

/* Prevent horizontal overflow */
html,
body {
    max-width: 100%;
    overflow-x: hidden;
}

/* Add elegant text styling */
p {
    line-height: 1.8;
}

/* Subtle animation for hover states */
.hover-lift {
    transition: transform 0.3s ease;
}

.hover-lift:hover {
    transform: translateY(-5px);
}

/* Add glass morphism effect */
.glass {
    background: var(--glass-bg);
    backdrop-filter: var(--glass-blur);
    -webkit-backdrop-filter: var(--glass-blur);
    border: 1px solid var(--glass-border);
}

/* Add text shadow for headings */
h1,
h2,
h3,
h4,
h5,
h6 {
    text-shadow: 0 1px 2px var(--shadow-heading);
}

.navbar-bottom-line {
  border-bottom: 1px solid hsl(var(--border));
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s;
}

/* Dark mode overrides */
.dark .navbar-bottom-line {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
}

.border-b-0 {
  border-bottom: 0 !important;
}

/* Table styles for TipTap editor */
.ProseMirror table {
  table-layout: fixed;
  width: 100%;
}

.ProseMirror td, .ProseMirror th {
  min-width: 1em;
  border: 2px solid #ced4da;
  padding: 8px;
  position: relative;
  vertical-align: top;
  box-sizing: border-box;
}

/* Reset expanded width */
.ProseMirror td p, .ProseMirror th p {
  margin: 0;
  min-width: 0;
  white-space: normal;
}

/* Ensure table cells don't wrap text */
.ProseMirror td {
  white-space: nowrap;
}

/* Image floating and wrapping styles */
.ProseMirror {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  hyphens: auto;
}

/* Floating image container */
.ProseMirror [data-type="image-container"] {
  position: relative;
  display: inline-block;
  vertical-align: top;
  margin: 0 1rem 1rem 0;
  line-height: 1.5;
  max-width: 100%;
}

/* Left floating image */
.ProseMirror [data-type="image-container"][data-float="left"] {
  float: left;
  margin: 0.5rem 1rem 0.5rem 0;
  shape-outside: margin-box;
  shape-margin: 0.75rem;
  clear: left;
}

/* Right floating image */
.ProseMirror [data-type="image-container"][data-float="right"] {
  float: right;
  margin: 0.5rem 0 0.5rem 1rem;
  shape-outside: margin-box;
  shape-margin: 0.75rem;
  clear: right;
}

/* Centered image */
.ProseMirror [data-type="image-container"][data-float="none"] {
  display: block;
  margin: 1rem auto;
  float: none;
  clear: both;
}

/* Image styles */
.ProseMirror .floating-image {
  max-width: 100%;
  height: auto;
  display: block;
  border-radius: 0.375rem;
  margin: 0;
}

/* Text wrapping around images */
.ProseMirror p {
  margin: 0 0 1rem 0;
  line-height: 1.6;
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;
  overflow: visible;
}

.ProseMirror ul,
.ProseMirror ol {
  margin: 0 0 1rem 1.5rem;
  padding: 0;
}

/* Clear floats after content */
.ProseMirror > *:after {
  content: "";
  display: table;
  clear: both;
}

/* Fix for paragraphs after floats */
.ProseMirror p + p {
  clear: none;
}

/* Image Container Styles */
.resizable-image-container {
  position: relative;
  display: inline-block;
  max-width: 50%;
  vertical-align: top;
  margin: 0.25em 1em 0.5em 0;
  z-index: 1;
}

/* Left-floated images */
.resizable-image-container[data-float="left"] {
  float: left;
  margin: 0.25em 1.5em 0.5em 0;
  shape-outside: margin-box;
  shape-margin: 1em;
  clear: left;
}

/* Right-floated images */
.resizable-image-container[data-float="right"] {
  float: right;
  margin: 0.25em 0 0.5em 1.5em;
  shape-outside: margin-box;
  shape-margin: 1em;
  clear: right;
}

/* Center-aligned images */
.resizable-image-container[data-float="none"] {
  display: block;
  float: none;
  margin: 1em auto;
  max-width: 100%;
  clear: both;
}

/* Image styles */
.floating-image {
  max-width: 100%;
  height: auto;
  display: block;
  margin: 0;
  pointer-events: auto;
}

/* Resize handle */
.resize-handle {
  position: absolute;
  right: -8px;
  bottom: -8px;
  width: 16px;
  height: 16px;
  background-color: #3b82f6;
  border-radius: 2px;
  cursor: nwse-resize;
  opacity: 0;
  transition: opacity 0.2s;
  z-index: 10;
}

.resizable-image-container:hover .resize-handle {
  opacity: 1;
}

/* Text wrapping and flow */
.ProseMirror {
  overflow-wrap: break-word;
  white-space: normal;
  word-wrap: break-word;
  word-break: break-word;
}

/* Paragraph styles */
.ProseMirror p {
  margin: 0 0 1em 0;
  overflow: visible;
  clear: none;
}

/* Clear floats after content */
.ProseMirror > *:after {
  content: "";
  display: table;
  clear: both;
}

/* Clear floats for block elements */
.ProseMirror h1,
.ProseMirror h2,
.ProseMirror h3,
.ProseMirror h4,
.ProseMirror h5,
.ProseMirror h6,
.ProseMirror hr,
.ProseMirror ul,
.ProseMirror ol,
.ProseMirror pre,
.ProseMirror blockquote,
.ProseMirror table {
  clear: both;
}

/* Ensure proper spacing after images */
.ProseMirror .resizable-image-container + * {
  margin-top: 0.5em;
}

/* Clear floats when needed */
.clear-float {
  clear: both;
  height: 0;
  font-size: 0;
  line-height: 0;
  overflow: hidden;
}

/* Prevent empty paragraphs from collapsing */
.ProseMirror p:empty:before {
  content: '\00A0';
  display: inline;
}

/* Fix for image selection */
.ProseMirror .floating-image {
  user-select: none;
  -webkit-user-drag: none;
} 

/* Enhanced Tiptap Editor Link Preview */
a[data-description] {
  position: relative;
  color: #2563eb;
  text-decoration: none;
  border-bottom: 1px solid #93c5fd;
  transition: all 0.2s ease;
  cursor: pointer;
}

a[data-description]:hover {
  color: #1d4ed8;
  border-bottom-color: #60a5fa;
}

/* Main preview container */
a[data-description] {
  position: relative;
  display: inline-block;
}

a[data-description]::after {
  content: attr(data-title) '\A' attr(data-description);
  white-space: pre-wrap;
  position: absolute;
  bottom: calc(100% + 10px);
  left: 0;
  width: 320px;
  max-width: calc(100vw - 40px);
  background: white;
  border-radius: 8px;
  padding: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.12);
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
  z-index: 1000;
  pointer-events: auto;
  border: 1px solid #e5e7eb;
  text-align: left;
  font-size: 14px;
  line-height: 1.5;
  max-height: 250px;
  overflow-y: auto;
  white-space: normal;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
}

/* Default positioning - center aligned */
a[data-description]::after {
  left: 50%;
  transform: translateX(-50%);
}

/* Left edge detection - show preview to the right */
a[data-description][data-position="left"]::after {
  left: 0;
  transform: none;
  margin-left: 0;
}

/* Right edge detection - show preview to the left */
a[data-description][data-position="right"]::after {
  left: auto;
  right: 0;
  transform: none;
  margin-right: 0;
}

/* Style for the title in the preview */
a[data-description]::after {
  /* Title styling */
  font-weight: bold;
  color: #111827;
}

/* Style for the description in the preview */
a[data-description]::after {
  /* Description styling */
  font-weight: 400;
  color: #4b5563;
}

/* List styles */
.ProseMirror ul,
.ProseMirror ol,
.prose ul,
.prose ol {
  padding-left: 1.5rem;
  margin: 0.75rem 0;
  list-style-position: outside;
}

/* Default list styles */
.ProseMirror ul,
.prose ul {
  list-style-type: disc;
}

.ProseMirror ol,
.prose ol {
  list-style-type: decimal;
}

/* List style variants */
.ProseMirror ol[data-list-style="decimal"],
.prose ol[data-list-style="decimal"] {
  list-style-type: decimal;
}

.ProseMirror ol[data-list-style="lower-roman"],
.prose ol[data-list-style="lower-roman"] {
  list-style-type: lower-roman;
}

.ProseMirror ol[data-list-style="upper-roman"],
.prose ol[data-list-style="upper-roman"] {
  list-style-type: upper-roman;
}

.ProseMirror ol[data-list-style="lower-alpha"],
.ProseMirror ol[data-list-style="lower-latin"],
.prose ol[data-list-style="lower-alpha"],
.prose ol[data-list-style="lower-latin"] {
  list-style-type: lower-alpha;
}

.ProseMirror ol[data-list-style="upper-alpha"],
.ProseMirror ol[data-list-style="upper-latin"],
.prose ol[data-list-style="upper-alpha"],
.prose ol[data-list-style="upper-latin"] {
  list-style-type: upper-alpha;
}

/* Support for inline style attributes (for backward compatibility) */
.ProseMirror ol[style*="lower-roman"],
.prose ol[style*="lower-roman"] {
  list-style-type: lower-roman !important;
}

.ProseMirror ol[style*="upper-roman"],
.prose ol[style*="upper-roman"] {
  list-style-type: upper-roman !important;
}

.ProseMirror ol[style*="lower-alpha"],
.ProseMirror ol[style*="lower-latin"],
.prose ol[style*="lower-alpha"],
.prose ol[style*="lower-latin"] {
  list-style-type: lower-alpha !important;
}

.ProseMirror ol[style*="upper-alpha"],
.ProseMirror ol[style*="upper-latin"],
.prose ol[style*="upper-alpha"],
.prose ol[style*="upper-latin"] {
  list-style-type: upper-alpha !important;
}

/* Adjust for left edge */
@media (max-width: 400px) {
  a[data-description]::before,
  a[data-description]::after {
    left: 0;
    transform: none;
    margin-left: 10px;
    margin-right: 10px;
    max-width: calc(100vw - 40px);
  }
  a[data-description]::after {
    left: 0;
    transform: none;
    margin-left: 10px;
  }
  
  a[data-description]::before {
    left: 0;
    transform: none;
    margin-left: 10px;
    border-radius: 0 8px 0 0;
  }
  
  a[data-description]:hover::after,
  a[data-description]::after:hover {
    transform: none;
    margin-left: 10px;
  }
  
  a[data-description]:hover::before,
  a[data-description]::before:hover {
    transform: none;
    margin-left: 10px;
  }
}

/* Responsive adjustments */
@media (min-width: 401px) and (max-width: 800px) {
  /* Ensure preview stays within viewport */
  a[data-description]::after {
    max-width: min(320px, calc(100vw - 40px));
    width: auto;
  }
  
  /* Adjust border radius for edge cases */
  a[data-description][data-position="left"]::after {
    border-radius: 0 8px 8px 8px;
  }
  
  a[data-description][data-position="right"]::after {
    border-radius: 8px 0 8px 8px;
  }
}

/* Style the description container */
a[data-description]::after {
  display: flex;
  flex-direction: column;
  padding: 16px;
  color: #4b5563;
  font-size: 15px;
  line-height: 1.6;
  white-space: normal;
  text-align: left;
}

/* Style the title (first line) */
a[data-description]::after {
  content: attr(data-title) '\A' attr(data-description);
  white-space: pre-line;
}

a[data-description]::after::first-line {
  display: block;
  font-weight: 700;
  color: #111827;
  font-size: 17px;
  margin-bottom: 12px;
  padding-bottom: 12px;
  line-height: 1.4;
  letter-spacing: -0.01em;
  border-bottom: 1px solid #f0f0f0;
}

/* Ensure the description starts on a new line */
a[data-description]::after span {
  display: block;
  margin-top: 8px;
}

/* Add a bit of space between paragraphs in the description */
a[data-description]::after p {
  margin: 0 0 8px 0;
}

a[data-description]::after p:last-child {
  margin-bottom: 0;
}

/* Hover states */
/* Show on hover */
a[data-description]:hover::before,
a[data-description]::before:hover,
a[data-description]:hover::after,
a[data-description]::after:hover {
  opacity: 1;
  visibility: visible;
}

/* Hover states for different positions */
a[data-description]:hover::after,
a[data-description]::after:hover {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/* Center-aligned previews */
a[data-description]:not([data-position]):hover::after,
a[data-description]:not([data-position])::after:hover {
  transform: translateX(-50%) translateY(0);
}

/* Keep the preview open when hovering over the link or the preview */
a[data-description]:hover::before,
a[data-description]:hover::after,
a[data-description]::before:hover,
a[data-description]::after:hover {
  opacity: 1;
  visibility: visible;
}

/* Arrow pointer */
a[data-description]:hover::before,
a[data-description]:hover::after {
  opacity: 1;
  visibility: visible;
  transform: translateY(-5px);
}

/* Reset transform for right/left aligned */
@media (max-width: 800px) {
  a[data-description]:hover::before,
  a[data-description]:hover::after {
    transform: translateY(-5px);
  }
}

a[data-description]:hover::after {
  transform: translateY(0);
  margin-top: 0; /* No extra margin needed as title is inside */
}

/* Dark mode support */
/* @media (prefers-color-scheme: dark) {
  a[data-description] {
    color: #60a5fa;
    border-bottom-color: #1e40af;
  }

  a[data-description]:hover {
    color: #3b82f6;
  }

  a[data-description]::before,
  a[data-description]::after {
    background: #1f2937;
    color: #f3f4f6;
    border-color: #374151;
  }

  a[data-description]::before {
    color: #ffffff;
    border-bottom-color: #374151;
  }
} */

/* --- Remove or comment out any rules like this if present: --- */
/* span img {
  display: inline !important;
} */

/* --- Add article-body scope for rendered articles --- */
/* Article body styles */
.article-body {
  overflow-wrap: break-word;
  word-break: break-word;
}

.article-body img {
  max-width: 100%;
  height: auto;
  display: block;
  border-radius: 0.375rem;
}

.article-body p {
  margin-bottom: 1rem;
  white-space: normal;
  overflow: visible;
}

/* Image container styles for article view */
.article-body .resizable-image-container,
.prose .resizable-image-container {
  position: relative;
  display: inline-block;
  max-width: 100%;
  vertical-align: top;
  margin: 0;
  clear: both;
}

/* Float left - only affects immediate sibling text */
.article-body .resizable-image-container[data-float="left"],
.article-body [data-float="left"],
.prose .resizable-image-container[data-float="left"],
.prose [data-float="left"] {
  float: left;
  margin: 0.25em 1.5em 0.5em 0;
  max-width: 50%;
  shape-outside: margin-box;
  shape-margin: 0.75rem;
  clear: none !important;
}

/* Float right in article body */
.article-body .resizable-image-container[data-float="right"],
.article-body [data-float="right"],
.prose .resizable-image-container[data-float="right"],
.prose [data-float="right"] {
  float: right;
  margin: 0.25em 0 0.5em 1.5em;
  max-width: 50%;
  shape-outside: margin-box;
  shape-margin: 0.75rem;
  clear: none !important;
}

/* Allow text to wrap around floated images */
.article-body p,
.prose p {
  overflow: visible;
  clear: none;
  margin-bottom: 1em;
}

/* Clear floats after the image's container paragraph */
.article-body p:has(> .resizable-image-container),
.prose p:has(> .resizable-image-container) {
  display: flow-root; /* Modern clearfix */
}

/* Clear floats for elements that should start on a new line */
.article-body h1,
.article-body h2,
.article-body h3,
.article-body h4,
.article-body h5,
.article-body h6,
.article-body hr,
.article-body ul,
.article-body ol,
.article-body pre,
.article-body blockquote,
.article-body table,
.prose h1,
.prose h2,
.prose h3,
.prose h4,
.prose h5,
.prose h6,
.prose hr,
.prose ul,
.prose ol,
.prose pre,
.prose blockquote,
.prose table {
  clear: both;
}

/* Ensure images don't overflow their containers */
.article-body .resizable-image-container,
.prose .resizable-image-container {
  max-width: 100%;
  height: auto;
}

/* Special handling for paragraphs following floated images */
.article-body p + p,
.prose p + p {
  clear: none;
}

/* Ensure proper spacing around images */
.article-body .resizable-image-container + p,
.prose .resizable-image-container + p {
  margin-top: 0.5em;
}

/* Clear floats at the end of containers */
.article-body::after,
.prose::after {
  content: "";
  display: table;
  clear: both;
}

/* Ensure floated images don't affect layout of following sections */
.article-body > *:not(p, .resizable-image-container),
.prose > *:not(p, .resizable-image-container) {
  clear: both;
}